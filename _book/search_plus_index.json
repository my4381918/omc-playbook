{"install/install.html":{"url":"install/install.html","title":"安装ansible","keywords":"","body":"安装ansible EPEL源安装方式 如果服务器有外网，直接通过epel源安装 rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm yum install ansible -y 如果服务器没有外网，只能采用安装包方式安装。 "},"install/install4co.html":{"url":"install/install4co.html","title":"centos安装","keywords":"","body":"redhat安装 如果服务器版本是CentOS6.5或者6.8版本，将安装包中ansible4centos.tar.gz上传至服务器/home/soft/目录，执行： tar -zxvf ansible4centos.tar.gz cd package/ rpm -ivh * 如果服务器安装系统时基于软件开发工作站模式安装，则上述安装包可以执行成功。 如果因服务器环境问题导致安装失败，缺少的依赖安装包需自己下载。 "},"install/install4rh.html":{"url":"install/install4rh.html","title":"redhat安装","keywords":"","body":"redhat安装 如果服务器版本是RedHat6.5或者6.8版本，将安装包中ansible4rh68.tar.gz上传至服务器/home/soft/目录，执行： tar -zxvf ansible4rh68.tar.gz cd package/ rpm -ivh * 如果服务器安装系统时基于软件开发工作站模式安装，则上述安装包可以执行成功。 如果因服务器环境问题导致安装失败，缺少的依赖安装包需自己下载。 "},"ssh.html":{"url":"ssh.html","title":"建立主机信任","keywords":"","body":"建立主机信任 单台主机 首先ansible服务端需生成秘钥 执行: ssh-keygen -t rsa -P '' -P '' 就表示空密码，一次回车后，在root目录下生成.ssh目录，.ssh下有id_rsa和id_rsa.pub。 将秘钥添加到客户端： ssh-copy-id -i /root/.ssh/id_rsa.pub {{ipaddr}} 多台主机 解压附件，附件为python和shell两个脚本。 按照ip：passwd的规则填写配置文件hostsname.txt或者config.json，然后执行脚本： sh test.sh 或者 python setsshlogin.py 测试 通过 ssh 测试主机连通性，如果不需输入密码完成登录即正常。 "},"test.html":{"url":"test.html","title":"测试主机联通性","keywords":"","body":"测试主机联通性 编辑ansible配置文件: vim /etc/ansible/hosts 新增主机列表，例如： [test] 192.166.62.100 192.166.62.101 192.166.62.102 192.166.62.103 执行ansible test -m ping: 如果没有报错，连接success即为成功。 "},"omc/all.html":{"url":"omc/all.html","title":"OMC playbook","keywords":"","body":"OMC playbook "},"omc/OMC运维脚本操作说明.html":{"url":"omc/OMC运维脚本操作说明.html","title":"OMC运维脚本操作说明","keywords":"","body":"安装OMC运维脚本 将安装包里的omc-playbook_V2.0.tar.gz上传至ansible主机home目录下并解压, cd /home tar -zxvf omc-playbook_V2.0.tar.gz 编辑配置文件 运维人员需要编辑omc-playbook下的以下文件： * production #定义主机 * site.yml/update.yml/rollback.yml/uninstall.yml #确认安装/升级/回滚/卸载的模块，按需编辑 * group_var/all #全局变量文件 * group_vars/* #主机组变量文件，编辑所需模块相关的变量 运行 部署时执行 ansible-playbook -i /home/omc-playbook/production /home/omc-playbook/site.yml 升级时执行 ansible-playbook -i /home/omc-playbook/production /home/omc-playbook/update.yml 回滚时执行 ansible-playbook -i /home/omc-playbook/production /home/omc-playbook/rollback.yml 卸载时执行 ansible-playbook -i /home/omc-playbook/production /home/omc-playbook/uninstall.yml "},"omc/主要目录结构说明.html":{"url":"omc/主要目录结构说明.html","title":"主要目录结构说明","keywords":"","body":"主要目录结构说明 OMC-playbook的目录结构如下： production # 主机组 group_vars/ all # 全局变量文件 group1 # 主机组变量 group2 # 主机组变量 ... site.yml # 部署 playbook update.yml # 升级 playbook rollback.yml # 回滚升级 playbook uninstall.yml # 卸载 playbook ... # 其他单独role的playbook roles/ jdk1_7/ # 安装jdk role tomcat7/ # 安装tomcat7 role ... # 其他role 运维人员可以通过执行上述4个playbook进行整体的部署、升级、回滚、卸载操作，也可以单独执行一个role的playbook，比如只安装jdk、只安装tomcat等等，还可以自己定义playbook，格式参考其他playbook并符合yaml语法即可。 "},"omc/production主机变量配置说明.html":{"url":"omc/production主机变量配置说明.html","title":"production主机变量配置说明","keywords":"","body":"production主机变量配置说明 主机信息的配置文件是/home/omc-playbook/production，文件内容如下： # file production [omc-dbservers] 192.166.62.100 [mq-servers] 192.166.62.100 192.166.62.101 [dbservers:children] omc-dbservers [mqservers:children] mq-servers [omc-picservers] 192.166.62.100 192.166.62.101 [picservers:children] omc-picservers [omc-boservers] 192.166.62.100 [boservers:children] omc-boservers [omc-portalservers1] 192.166.62.102 [omc-portalservers2] 192.166.62.103 [portalservers:children] omc-portalservers1 omc-portalservers2 [omc-aaaservers] 192.166.62.102 192.166.62.103 [aaaservers:children] omc-aaaservers [omc-ubaservers] 192.166.62.100 192.166.62.101 [ubaservers:children] omc-ubaservers [omc-pushservers] 192.166.62.102 192.166.62.103 [pushservers:children] omc-pushservers [omc-adservers] 192.166.62.100 [adservers:children] omc-adservers [omc-ntp-server] 192.166.62.103 [ntpserver:children] omc-ntp-server [omc-ntp-clients] 192.166.62.100 192.166.62.101 192.166.62.102 [ntpclients:children] omc-ntp-clients [omc-loadbalancese] 192.166.62.102 192.166.62.103 [loadbalanceservers:children] omc-loadbalancese [omc-mysql_1] # mysql主主复制，固定主机组 192.166.62.100 [omc-mysql_2] # mysql主主复制，固定主机组 192.166.62.101 [mysqlReplication:children] omc-mysql_1 omc-mysql_2 [omc-uninstalls] 192.166.62.100 192.166.62.101 192.166.62.102 192.166.62.103 [uninstalls:children] omc-uninstalls [keepalivedmaster1] 192.166.62.100 [keepalivedmaster2] 192.166.62.102 [keepalivedmaster:children] keepalivedmaster1 keepalivedmaster2 [keepalivedslave1] 192.166.62.101 [keepalivedslave2] 192.166.62.103 [keepalivedslave:children] keepalivedslave1 keepalivedslave2 [nserver] 192.166.62.103 [nclient] 192.166.62.100 192.166.62.101 192.166.62.102 表中采用最多两层的方式，定义了主机，主机组和二层主机组。主机信息推荐直接添加Ip地址，主机组和二层主机组中有一些固定组名是和操作已经绑定，信息如下： role 说明 [dbservers:children] 数据库安装和建表操作 [mqservers:children] Active-mq主机组 [picservers:children] 图片服务器的主机组 [boservers:children] BO服务器主机组 [portalservers:children] Portal服务器主机组 [aaaservers:children] AAA服务器主机组 [ubaservers:children] UBA服务器主机组 [pushservers:children] Push服务器主机组 [adservers:children] 广告服务器主机组 [ntpserver:children] 本地时间服务器组 [ntpclients:children] 本地需要设置时间同步的主机组 [loadbalanceservers:children] Nginx负载均衡安装主机组 [mysqlReplication:children] Mysql主主复制主机组 [uninstalls:children] 卸载操作进行的主机组 [keepalivedmaster:children] Keeplived的master主机组 [keepalivedslave:children] Keeplived的slave主机组 [nserver] 安装nagios server的主机组 [nclient] 安装nagios client的主机组 二级分组的作用：对整组服务器采用相同安装操作，对相同子组的服务器使用相同的变量。变量主要决定服务器中配置文件中的配置项目的值。 "},"omc/group_vars组变量配置说明.html":{"url":"omc/group_vars组变量配置说明.html","title":"group_vars组变量配置说明","keywords":"","body":"通过变量来决定服务器中应用的配置文件中的配置值，默认采用一组主机使用相同的变量，变量定义在/home/omc-playbook/group_vars目录中。 group_vars下面包含文件all、以主机组命令的文件（二级主机组名称是冒号前面的部分）。 all文件中变量作用于所有主机，其他文件变量是能在固定的主机组中可用。 # file : group_var/all #db passwd rootPasswd: root #choice to install(True/False) IsInstallBO: True IsInstallPortal: True IsInstallAAA: True IsInstallPush: True IsInstallUBA: True IsInstallAD: True IsInstallDenyHosts: True #ulimit参数(默认，一遍不需修改) soft_nofile_number: 102400 hard_nofile_number: 102400 # Here are variables for nagios server install # 修改nagios报警的联系人和联系方式（邮箱） contact_name1: zhouguangcan contact_name2: zhangyifei contact_name3: qiaowenwei contact_name1_email: zhouguangcan123@sumaott.com contact_name2_email: zhangyifei123@sumaott.com contact_name3_email: qiaowenwei123@sumaott.com # nagios管理页面的账号密码 nagiosadmin: nagios nagiospassword: sumavision # nagios 主机组定义，按下述模板编辑 host_group: bo_group: bo1: \"192.166.62.100\" bo2: \"192.166.62.101\" portal_group: portal1: \"192.166.62.102\" portal2: \"192.166.62.103\" # Here are variables for nagios client install # nagios监控项的参数 nagios_server_ip: 192.166.62.103 ntp_server_ip: 192.166.62.103 check_net_device: bond1 check_disk_partition: sda1 dbuser: root dbpassword: sumavision #nginx负载均衡代理的端口 Portal_port: 9080 AAA_port: 9080 PIC_port: 9082 其他组变量需根据自己的需要定义，比如要安装keepalive，需修改group_vars/keepalivedmaster1 --- #file: group_vars/keepalivedmaster virtual_state: MASTER keepalived_ip: 192.166.62.100 keepalived_device: eth0 vvid: 100 priority: 100 virtual_ip: 192.166.62.104 然后修改group_vars/keepalivedslave1 --- #file: group_vars/keepalivedmaster virtual_state: SLAVE keepalived_ip: 192.166.62.101 keepalived_device: eth0 vvid: 100 priority: 70 virtual_ip: 192.166.62.104 要保证安装后功能正常，必须明确每一个参数的意义并正确配置。 "},"omc/site.yml部署入口文件配置说明.html":{"url":"omc/site.yml部署入口文件配置说明.html","title":"site.yml部署入口文件配置说明.md","keywords":"","body":"site.yml入口地址文件配置说明 site.yml是ansible的入口文件，确定了要安装的模块。如果不需要安装该模块可以选择添加#，注释掉。 # file site.yml # system optimize - include: services.yml #设置iptables等基本服务的开关 - include: ulimit.yml #优化系统的连接数设置 - include: sysctl.yml #优化TCP连接参数 #安装基础软件 - include: ntpserver.yml #安装NTP时间服务器 - include: ntpclients.yml #设置NTP时间同步 - include: keepalived.yml #安装keeplived - include: loadbalanceservers.yml #安装nginx最为负载均衡 - include: mysqlReplication.yml #安装两台mysql主主复制 - include: dbservers.yml #安装配置mysql建表和导入数据 - include: mqservers.yml #安装activeMQ - include: picservers.yml #安装安装图片服务器 #安装安全软件 - include: denyhosts.yml #linux安全设置 when: IsInstallDenyHosts == True # 安装web服务模块 - include: boservers.yml #安装BO服务 when: IsInstallBO == True - include: portalservers.yml #安装Portal服务 when: IsInstallPortal == True - include: aaaservers.yml #安装AAA服务 when: IsInstallAAA == True - include: pushservers.yml #安装推送服务 when: IsInstallPush == True - include: ubaservers.yml #安装uba服务 when: IsInstallUBA == True - include: adservers.yml #安装ad服务 when: IsInstallAD == True # 安装nagios监控 - include: nclient.yml #安装nagios被监控端 - include: nserver.yml #安装nagios监控服务 "},"omc/uninstall.yml卸载入口文件配置说明.html":{"url":"omc/uninstall.yml卸载入口文件配置说明.html","title":"uninstall.yml卸载入口文件配置说明","keywords":"","body":"uninstall.yml卸载入口文件配置说明 卸载应用程序的运维入口脚本是/home/omc-playbook/uninstall.yml， 如果需要设置应用卸载选项，编辑变量文件/home/omc-playbook/group_vars/omc-uninstalls选择需要写卸载的应用。 IsUninstallAAA: True IsUninstallMQ_AD: True IsUninstallMQ: True IsUninstalladm: True IsUninstallADs: True IsUninstallBO: True IsUninstallffmpeg: True IsUninstallMysql: True IsUninstallNginx: True IsUninstallPortal: True IsUninstallPush: True IsUninstallUAS: True IsUninstallUBA: True IsUninstallVsftpd: True is_keepalived_uninstall: True is_denyhosts_uninstall: True is_nagios_server_uninstall: True is_nagios_client_uninstall: True 配置文件中True代表确认卸载，如果不需卸载则将True改为False即可。 卸载需要执行下面命令 ansible-playbook -i /home/omc-playbook/production /home/omc-playbook/ uninstall.yml "},"omc/update.yml升级入口文件配置说明.html":{"url":"omc/update.yml升级入口文件配置说明.html","title":"update.yml升级入口文件配置说明","keywords":"","body":"update.yml升级入口文件配置说明 更新应用程序的运维入口脚本是/home/omc-playbook/update.yml，文件内容如下： （如果不需要安装的部分，可以注释掉相关调用） #- include: update_dbservers.yml # 更新数据库 - include: update_aaaservers.yml # 更新AAA - include: update_adservers_adm.yml # 更新adm - include: update_adservers_cpm.yml # 更新cpm - include: update_adservers_uas.yml # 更新 uas - include: update_boservers.yml # 更新bo - include: update_portalservers_smg.yml # 更新smg - include: update_portalservers.yml #更新Portal - include: update_pushservers.yml #更新Push - include: update_ubaservers.yml #更新 uba 更新包方式说明：以Portal为例，一次完成的更新，需要研发提供PortalServer-App.war，update_portaldb.sql，以及配置文件的模板文件configinfo.properties和jdbc.properties等，别且用准备的文件替换下列的相应文件 /home/omc-playbook/roles/update_tomcat-8080-portal/templates/configinfo.properties /home/omc-playbook/roles/update_tomcat-8080-portal/templates/jdbc.properties /home/omc-playbook/roles/update_tomcat-8080-portal/files/PortalServer-App.war /home/omc-playbook/roles/update_mysql/files/update_portaldb.sql 更新需要执行下面命令 ansible-playbook -i /home/omc-playbook/production /home/omc-playbook/update.yml Ps: 如果只需要单独进行某个安装更新，例如进行Portal不带数据更新，可以单独调用update_portalservers.yml。 "},"omc/rollback.yml回滚入口文件配置说明.html":{"url":"omc/rollback.yml回滚入口文件配置说明.html","title":"rollback.yml回滚入口文件配置说明","keywords":"","body":"rollback.yml回滚入口文件配置说明 回滚对应更新操作，回滚应用程序的运维入口脚本是/home/omc-playbook/rollba ck.yml，文件内容如下： （如果不需要安装的部分，可以#注释掉相关调用） - include: rollback_dbservers.yml - include: rollback_aaaservers.yml - include: rollback_adservers_adm.yml - include: rollback_adservers_cpm.yml - include: rollback_adservers_uas.yml - include: rollback_boservers.yml - include: rollback_portalservers_msg.yml - include: rollback_portalservers.yml - include: rollback_pushservers.yml - include: rollback_ubaservers.yml 注意如果想使用回滚数据，需要保证数据升级操作是可以回滚的，并且将研发提供的回滚数据库的脚本放到/home/omc-playbook/roles/rollback_mysql/files目录中，替换对应的文件 回滚需要执行下面命令 ansible-playbook -i /home/omc-playbook/production /home/omc-playbook/rollabck.yml "},"solution.html":{"url":"solution.html","title":"故障排查和解决","keywords":"","body":"故障排查和解决 "},"./":{"url":"./","title":"关于","keywords":"","body":"关于 -- 本文档仅限数码视讯使用Ansible部署OMC使用，内部资料，请勿传播。 "}}